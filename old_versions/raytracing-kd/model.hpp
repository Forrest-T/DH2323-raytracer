#ifndef model_hpp_
#define model_hpp_

#include <glm/glm.hpp>
#include <vector>

#include "Triangle.hpp"

using glm::vec3;

static struct {vec3 v0; vec3 v1; vec3 v2; vec3 color;} data[30] = {
    {{-1.000000, 1.000000, 1.000000},   {1.000000, 1.000000, -1.000000},   {-1.000000, 1.000000, -1.000000}, {0.150000, 0.750000, 0.150000}},
    {{-1.000000, 1.000000, 1.000000},   {1.000000, 1.000000, 1.000000},    {1.000000, 1.000000, -1.000000},  {0.150000, 0.750000, 0.150000}},
    {{-1.000000, 1.000000, -1.000000},  {-1.000000, -1.000000, -1.000000}, {-1.000000, 1.000000, 1.000000},  {0.750000, 0.150000, 0.750000}},
    {{-1.000000, 1.000000, 1.000000},   {-1.000000, -1.000000, -1.000000}, {-1.000000, -1.000000, 1.000000}, {0.750000, 0.150000, 0.750000}},
    {{1.000000, -1.000000, -1.000000},  {1.000000, 1.000000, -1.000000},   {1.000000, 1.000000, 1.000000},   {0.750000, 0.750000, 0.150000}},
    {{1.000000, -1.000000, 1.000000},   {1.000000, -1.000000, -1.000000},  {1.000000, 1.000000, 1.000000},   {0.750000, 0.750000, 0.150000}},
    {{-1.000000, -1.000000, -1.000000}, {1.000000, -1.000000, -1.000000},  {-1.000000, -1.000000, 1.000000}, {0.150000, 0.750000, 0.750000}},
    {{1.000000, -1.000000, -1.000000},  {1.000000, -1.000000, 1.000000},   {-1.000000, -1.000000, 1.000000}, {0.150000, 0.750000, 0.750000}},
    {{-1.000000, -1.000000, 1.000000},  {1.000000, 1.000000, 1.000000},    {-1.000000, 1.000000, 1.000000},  {0.750000, 0.750000, 0.750000}},
    {{-1.000000, -1.000000, 1.000000},  {1.000000, -1.000000, 1.000000},   {1.000000, 1.000000, 1.000000},   {0.750000, 0.750000, 0.750000}},
    {{-0.045045, 0.405405, -0.589189},  {0.531532, 1.000000, -0.765766},   {-0.045045, 1.000000, -0.589189}, {0.750000, 0.150000, 0.150000}},
    {{-0.045045, 0.405405, -0.589189},  {0.531532, 0.405405, -0.765766},   {0.531532, 1.000000, -0.765766},  {0.750000, 0.150000, 0.150000}},
    {{0.531532, 0.405405, -0.765766},   {0.704504, 1.000000, -0.189189},   {0.531532, 1.000000, -0.765766},  {0.750000, 0.150000, 0.150000}},
    {{0.531532, 0.405405, -0.765766},   {0.704504, 0.405405, -0.189189},   {0.704504, 1.000000, -0.189189},  {0.750000, 0.150000, 0.150000}},
    {{0.704504, 0.405405, -0.189189},   {0.135135, 1.000000, -0.019820},   {0.704504, 1.000000, -0.189189},  {0.750000, 0.150000, 0.150000}},
    {{0.704504, 0.405405, -0.189189},   {0.135135, 0.405405, -0.019820},   {0.135135, 1.000000, -0.019820},  {0.750000, 0.150000, 0.150000}},
    {{0.135135, 0.405405, -0.019820},   {-0.045045, 0.405405, -0.589189},  {0.135135, 1.000000, -0.019820},  {0.750000, 0.150000, 0.150000}},
    {{-0.045045, 0.405405, -0.589189},  {-0.045045, 1.000000, -0.589189},  {0.135135, 1.000000, -0.019820},  {0.750000, 0.150000, 0.150000}},
    {{0.135135, 0.405405, -0.019820},   {0.531532, 0.405405, -0.765766},   {-0.045045, 0.405405, -0.589189}, {0.750000, 0.150000, 0.150000}},
    {{0.135135, 0.405405, -0.019820},   {0.704504, 0.405405, -0.189189},   {0.531532, 0.405405, -0.765766},  {0.750000, 0.150000, 0.150000}},
    {{-0.524324, -0.189189, -0.109910}, {0.045045, 1.000000, 0.066667},    {-0.524324, 1.000000, -0.109910}, {0.150000, 0.150000, 0.750000}},
    {{-0.524324, -0.189189, -0.109910}, {0.045045, -0.189189, 0.066667},   {0.045045, 1.000000, 0.066667},   {0.150000, 0.150000, 0.750000}},
    {{0.045045, -0.189189, 0.066667},   {-0.131532, 1.000000, 0.643243},   {0.045045, 1.000000, 0.066667},   {0.150000, 0.150000, 0.750000}},
    {{0.045045, -0.189189, 0.066667},   {-0.131532, -0.189189, 0.643243},  {-0.131532, 1.000000, 0.643243},  {0.150000, 0.150000, 0.750000}},
    {{-0.131532, -0.189189, 0.643243},  {-0.700901, 1.000000, 0.463063},   {-0.131532, 1.000000, 0.643243},  {0.150000, 0.150000, 0.750000}},
    {{-0.131532, -0.189189, 0.643243},  {-0.700901, -0.189189, 0.463063},  {-0.700901, 1.000000, 0.463063},  {0.150000, 0.150000, 0.750000}},
    {{-0.700901, -0.189189, 0.463063},  {-0.524324, -0.189189, -0.109910}, {-0.700901, 1.000000, 0.463063},  {0.150000, 0.150000, 0.750000}},
    {{-0.524324, -0.189189, -0.109910}, {-0.524324, 1.000000, -0.109910},  {-0.700901, 1.000000, 0.463063},  {0.150000, 0.150000, 0.750000}},
    {{-0.700901, -0.189189, 0.463063},  {0.045045, -0.189189, 0.066667},   {-0.524324, -0.189189, -0.109910},{0.150000, 0.150000, 0.750000}},
    {{-0.700901, -0.189189, 0.463063},  {-0.131532, -0.189189, 0.643243},  { 0.045045, -0.189189, 0.066667}, {0.150000, 0.150000, 0.750000}}
};

void LoadTestModel(std::vector<Triangle>& triangles) {
    triangles = std::vector<Triangle>(30);
    for (int i = 0; i < 30; i++)
        triangles[i] = Triangle(data[i].v0, data[i].v1, data[i].v2, data[i].color);
}
#endif
